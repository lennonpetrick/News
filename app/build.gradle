apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.test.news"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_URL", "\"https://newsapi.org/v2/\""
        buildConfigField "String", "API_KEY", getToken("api_key")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def getToken(String property) {
    Properties properties = new Properties()
    properties.load(new FileInputStream(rootProject.file("api_tokens.properties")))
    return "\"" + properties.getProperty(property) + "\""
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:design:$android_support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.jakewharton:butterknife:$jakewharton_butterknife_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor "com.jakewharton:butterknife-compiler:$jakewharton_butterknife_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation("com.squareup.picasso:picasso:$picasso_version") {
        exclude group: 'com.android.support', module: 'exifinterface'
    }
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support.test:runner:$runner_version"
    androidTestImplementation "com.android.support.test:rules:$runner_version"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$espresso_version"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:$espresso_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espresso_version") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
}
